{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{214:function(a,s,t){\"use strict\";t.r(s);var e=t(0),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"常见小问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常见小问题\"}},[a._v(\"#\")]),a._v(\" 常见小问题\")]),a._v(\" \"),t(\"blockquote\",[t(\"p\",[a._v(\"项目常见问题\")])]),a._v(\" \"),t(\"h2\",{attrs:{id:\"_1-后台\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-后台\"}},[a._v(\"#\")]),a._v(\" 1.后台\")]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_1-1-idea项目启动不成功问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-idea项目启动不成功问题\"}},[a._v(\"#\")]),a._v(\" 1.1 idea项目启动不成功问题\")]),a._v(\" \"),t(\"blockquote\",[t(\"p\",[a._v(\"当ided 跑项目时不报错但是卡住无响应，无法启动成功\")])]),a._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v(\"将项目路径中的.idea文件夹删除，然后重新编译即可\\n\")])]),a._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"_1-2-关于java-replace和replaceall\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-关于java-replace和replaceall\"}},[a._v(\"#\")]),a._v(\" 1.2 关于java,replace和replaceAll\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[a._v('replace的参数是char和CharSequence，即可以支持字符的替换，也支持字符串的替换（CharSequence即字符串序列的意思,说白了也就是字符串）;\\nreplaceAll的参数是regex，即基于规则表达式的替换，比如：可以通过replaceAll(\"\\\\\\\\d\", \"*\")把一个字符串所有的数字字符都换成星号;\\n')])]),a._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),t(\"br\")])]),t(\"h2\",{attrs:{id:\"_2-前端\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-前端\"}},[a._v(\"#\")]),a._v(\" 2.前端\")]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_2-1-indexof使用方法\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-indexof使用方法\"}},[a._v(\"#\")]),a._v(\" 2.1 indexOf使用方法\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-js line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"#indexOf\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" 方法可返回某个指定的字符串值在字符串中首次出现的位置。\\n语法\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\":\")]),a._v(\"stringObject\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"indexOf\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"searchvalue\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\"fromindex\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n\")])]),a._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),t(\"br\")])]),t(\"table\",[t(\"thead\",[t(\"tr\",[t(\"th\",[a._v(\"参数\")]),a._v(\" \"),t(\"th\",[a._v(\"属性值\")])])]),a._v(\" \"),t(\"tbody\",[t(\"tr\",[t(\"td\",[a._v(\"searchvalue\")]),a._v(\" \"),t(\"td\",[a._v(\"必需。规定需检索的字符串值。\")])]),a._v(\" \"),t(\"tr\",[t(\"td\",[a._v(\"fromindex\")]),a._v(\" \"),t(\"td\",[a._v(\"可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\")])])])]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_2-2-jquery中保留关键字冲突\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-jquery中保留关键字冲突\"}},[a._v(\"#\")]),a._v(\" 2.2 jquery中保留关键字冲突\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-js line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[t(\"code\",[a._v(\"在jquery中不可使用nodeName作为变量，与关键字冲突！\\n\")])]),a._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),t(\"br\")])]),t(\"h2\",{attrs:{id:\"_3-nginx\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-nginx\"}},[a._v(\"#\")]),a._v(\" 3.nginx\")]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_3-1-上传图片页面报错post-413\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1-上传图片页面报错post-413\"}},[a._v(\"#\")]),a._v(\" 3.1 上传图片页面报错POST 413\")]),a._v(\" \"),t(\"div\",{staticClass:\"language-nginx line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-nginx\"}},[t(\"code\",[a._v(\"一般来说是服务器使用nginx作为反向代理出现的问题，post请求长度超过了nginx默认的缓存大小和最大客户端最大请求大小。\\n在\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"http\")]),a._v(\"模块添加\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[a._v(\"client_max_body_size\")]),a._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"20\")]),a._v(\"m\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\";\")]),a._v(\"\\n\")])]),a._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),t(\"br\")])])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}